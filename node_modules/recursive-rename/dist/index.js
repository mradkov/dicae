'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _traverser = require('./traverser');

var _traverser2 = _interopRequireDefault(_traverser);

var _validator2 = require('./validator');

var _validator3 = _interopRequireDefault(_validator2);

var _excludes = require('./excludes');

var _excludes2 = _interopRequireDefault(_excludes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Rename = function () {
  function Rename(options) {
    (0, _classCallCheck3.default)(this, Rename);
    var src = options.src,
        dest = options.dest,
        exclude = options.exclude,
        override = options.override,
        path = options.path;

    var _ref = new _excludes2.default(exclude),
        excludes = _ref.excludes;

    var validatorOptions = {
      excludes: excludes,
      override: override,
      path: path
    };

    this.validator = new _validator3.default(src, dest, validatorOptions);
  }

  (0, _createClass3.default)(Rename, [{
    key: 'dive',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(dry) {
        var _validator, src, dest, excludes, path, traverser;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _validator = this.validator, src = _validator.src, dest = _validator.dest, excludes = _validator.excludes, path = _validator.path;
                traverser = new _traverser2.default(path, {
                  src: src,
                  dest: dest,
                  excludes: excludes
                });
                _context.next = 4;
                return traverser.traverse({ dry: dry });

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function dive(_x) {
        return _ref2.apply(this, arguments);
      }

      return dive;
    }()
  }]);
  return Rename;
}();

module.exports = Rename;
exports.default = Rename;